{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\PRACTICA\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n\n  // Función para obtener todas las tareas\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/tasks\", {\n        method: \"GET\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Error al obtener las tareas\");\n      }\n      const data = await response.json();\n      setTasks(data); // Guardamos las tareas en el estado\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // Función para agregar una nueva tarea\n  const addTask = async () => {\n    if (newTask.trim() === \"\") return; // Evitar enviar tareas vacías\n\n    try {\n      const response = await fetch(\"http://localhost:8080/tasks\", {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: newTask\n        }) // Enviar la nueva tarea\n      });\n      if (!response.ok) {\n        throw new Error(\"Error al agregar la tarea\");\n      }\n      const data = await response.json();\n      setTasks(prevTasks => [...prevTasks, data]); // Añadimos la nueva tarea\n      setNewTask(''); // Limpiamos el input\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // Función para eliminar una tarea\n  const deleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:8080/tasks/${taskId}`, {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Error al eliminar la tarea\");\n      }\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId)); // Eliminamos la tarea del estado\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // Llamada para obtener las tareas cuando el componente se monte\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      placeholder: \"Escribe una nueva tarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Agregar tarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bPCx0+2jxyKSWrxqvYM6Q5jItg8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","fetchTasks","response","fetch","method","headers","ok","Error","data","json","error","console","addTask","trim","body","JSON","stringify","name","prevTasks","deleteTask","taskId","filter","task","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Documents/PRACTICA/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n\r\n  // Función para obtener todas las tareas\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/tasks\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error al obtener las tareas\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      setTasks(data); // Guardamos las tareas en el estado\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  // Función para agregar una nueva tarea\r\n  const addTask = async () => {\r\n    if (newTask.trim() === \"\") return; // Evitar enviar tareas vacías\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/tasks\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name: newTask }), // Enviar la nueva tarea\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error al agregar la tarea\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      setTasks(prevTasks => [...prevTasks, data]); // Añadimos la nueva tarea\r\n      setNewTask(''); // Limpiamos el input\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  // Función para eliminar una tarea\r\n  const deleteTask = async (taskId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/tasks/${taskId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Error al eliminar la tarea\");\r\n      }\r\n\r\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId)); // Eliminamos la tarea del estado\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  // Llamada para obtener las tareas cuando el componente se monte\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Lista de Tareas</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={newTask}\r\n        onChange={e => setNewTask(e.target.value)}\r\n        placeholder=\"Escribe una nueva tarea\"\r\n      />\r\n      <button onClick={addTask}>Agregar tarea</button>\r\n\r\n      <ul>\r\n        {tasks.map(task => (\r\n          <li key={task.id}>\r\n            {task.name} \r\n            <button onClick={() => deleteTask(task.id)}>Eliminar</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}