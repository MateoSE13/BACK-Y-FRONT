{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\PRACTICA\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]); // Para almacenar las tareas\n  const [newTask, setNewTask] = useState(''); // Para la tarea nueva que el usuario quiere agregar\n\n  // Función para obtener las tareas desde el backend\n  useEffect(() => {\n    fetch('http://backend:8080/api/tasks').then(response => response.json()).then(data => setTasks(data.tasks)).catch(error => console.error('Error al obtener tareas:', error));\n  }, []);\n\n  // Función para agregar una nueva tarea\n  const handleAddTask = e => {\n    e.preventDefault();\n    if (!newTask) {\n      return alert('Por favor ingresa una tarea');\n    }\n\n    // Realiza una solicitud POST para agregar la nueva tarea\n    fetch('http://backend:8080/api/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        task: newTask\n      }) // Envia la tarea en formato JSON\n    }).then(response => response.json()).then(addedTask => {\n      // Actualiza la lista de tareas añadiendo la nueva tarea a la vista\n      setTasks(prevTasks => [...prevTasks, addedTask]);\n      setNewTask(''); // Resetea el campo del formulario\n    }).catch(error => console.error('Error al agregar tarea:', error));\n  };\n\n  // Función para eliminar una tarea\n  const handleDeleteTask = taskId => {\n    fetch(`http://backend:8080/api/tasks/${taskId}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(() => {\n      // Filtra las tareas y elimina la que corresponde al ID\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n    }).catch(error => console.error('Error al eliminar tarea:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Agregar tarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.task, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bPCx0+2jxyKSWrxqvYM6Q5jItg8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","fetch","then","response","json","data","catch","error","console","handleAddTask","e","preventDefault","alert","method","headers","body","JSON","stringify","task","addedTask","prevTasks","handleDeleteTask","taskId","filter","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Documents/PRACTICA/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]); // Para almacenar las tareas\r\n  const [newTask, setNewTask] = useState(''); // Para la tarea nueva que el usuario quiere agregar\r\n\r\n  // Función para obtener las tareas desde el backend\r\n  useEffect(() => {\r\n    fetch('http://backend:8080/api/tasks')\r\n      .then((response) => response.json())\r\n      .then((data) => setTasks(data.tasks))\r\n      .catch((error) => console.error('Error al obtener tareas:', error));\r\n  }, []);\r\n\r\n  // Función para agregar una nueva tarea\r\n  const handleAddTask = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!newTask) {\r\n      return alert('Por favor ingresa una tarea');\r\n    }\r\n\r\n    // Realiza una solicitud POST para agregar la nueva tarea\r\n    fetch('http://backend:8080/api/tasks', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ task: newTask }), // Envia la tarea en formato JSON\r\n    })\r\n      .then((response) => response.json())\r\n      .then((addedTask) => {\r\n        // Actualiza la lista de tareas añadiendo la nueva tarea a la vista\r\n        setTasks((prevTasks) => [...prevTasks, addedTask]);\r\n        setNewTask(''); // Resetea el campo del formulario\r\n      })\r\n      .catch((error) => console.error('Error al agregar tarea:', error));\r\n  };\r\n\r\n  // Función para eliminar una tarea\r\n  const handleDeleteTask = (taskId) => {\r\n    fetch(`http://backend:8080/api/tasks/${taskId}`, {\r\n      method: 'DELETE',\r\n    })\r\n      .then((response) => response.json())\r\n      .then(() => {\r\n        // Filtra las tareas y elimina la que corresponde al ID\r\n        setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\r\n      })\r\n      .catch((error) => console.error('Error al eliminar tarea:', error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Tareas</h1>\r\n\r\n      <form onSubmit={handleAddTask}>\r\n        <input\r\n          type=\"text\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n          placeholder=\"Agregar tarea\"\r\n        />\r\n        <button type=\"submit\">Agregar</button>\r\n      </form>\r\n\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task.id}>\r\n            {task.task} \r\n            <button onClick={() => handleDeleteTask(task.id)}>Eliminar</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}