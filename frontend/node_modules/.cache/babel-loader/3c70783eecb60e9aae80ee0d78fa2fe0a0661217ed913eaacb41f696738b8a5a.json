{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\PRACTICA\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]); // Estado para las tareas\n  const [newTask, setNewTask] = useState(''); // Estado para una nueva tarea\n\n  // Función para obtener las tareas desde el backend\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/tasks');\n      if (!response.ok) {\n        throw new Error(`Error al obtener tareas: ${response.statusText}`);\n      }\n      const data = await response.json();\n      setTasks(data.tasks); // Actualiza el estado con las tareas obtenidas\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n      alert('Hubo un problema al obtener las tareas. Verifica si el servidor está activo.');\n    }\n  };\n\n  // Función para agregar una nueva tarea\n  const addTask = async () => {\n    if (!newTask.trim()) {\n      alert('Por favor, ingresa un nombre para la tarea.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:8080/api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          taskName: newTask.trim(),\n          description: ''\n        }) // Envía el formato correcto\n      });\n      if (!response.ok) {\n        throw new Error(`Error al agregar tarea: ${response.statusText}`);\n      }\n      const data = await response.json();\n      setTasks(prevTasks => [...prevTasks, data.task]); // Agrega la tarea recién creada al estado\n      setNewTask(''); // Limpia el campo de entrada\n    } catch (error) {\n      console.error('Error adding task:', error);\n      alert('No se pudo agregar la tarea. Intenta de nuevo.');\n    }\n  };\n\n  // Función para eliminar una tarea\n  const deleteTask = async id => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/tasks/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`Error al eliminar tarea: ${response.statusText}`);\n      }\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== id)); // Elimina la tarea del estado\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      alert('No se pudo eliminar la tarea. Intenta de nuevo.');\n    }\n  };\n\n  // Cargar las tareas al montar el componente\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Nueva tarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Agregar tarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: task.task_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete\",\n          onClick: () => deleteTask(task.id),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"task-item\",\n        children: \"No hay tareas disponibles.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bPCx0+2jxyKSWrxqvYM6Q5jItg8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","fetchTasks","response","fetch","ok","Error","statusText","data","json","error","console","alert","addTask","trim","method","headers","body","JSON","stringify","taskName","description","prevTasks","task","deleteTask","id","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","length","map","task_name","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Documents/PRACTICA/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]); // Estado para las tareas\r\n  const [newTask, setNewTask] = useState(''); // Estado para una nueva tarea\r\n\r\n  // Función para obtener las tareas desde el backend\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/tasks');\r\n      if (!response.ok) {\r\n        throw new Error(`Error al obtener tareas: ${response.statusText}`);\r\n      }\r\n      const data = await response.json();\r\n      setTasks(data.tasks); // Actualiza el estado con las tareas obtenidas\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n      alert('Hubo un problema al obtener las tareas. Verifica si el servidor está activo.');\r\n    }\r\n  };\r\n\r\n  // Función para agregar una nueva tarea\r\n  const addTask = async () => {\r\n    if (!newTask.trim()) {\r\n      alert('Por favor, ingresa un nombre para la tarea.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/tasks', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ taskName: newTask.trim(), description: '' }), // Envía el formato correcto\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error al agregar tarea: ${response.statusText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setTasks((prevTasks) => [...prevTasks, data.task]); // Agrega la tarea recién creada al estado\r\n      setNewTask(''); // Limpia el campo de entrada\r\n    } catch (error) {\r\n      console.error('Error adding task:', error);\r\n      alert('No se pudo agregar la tarea. Intenta de nuevo.');\r\n    }\r\n  };\r\n\r\n  // Función para eliminar una tarea\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/api/tasks/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error al eliminar tarea: ${response.statusText}`);\r\n      }\r\n\r\n      setTasks((prevTasks) => prevTasks.filter((task) => task.id !== id)); // Elimina la tarea del estado\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n      alert('No se pudo eliminar la tarea. Intenta de nuevo.');\r\n    }\r\n  };\r\n\r\n  // Cargar las tareas al montar el componente\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Lista de Tareas</h1>\r\n\r\n      {/* Formulario para agregar nueva tarea */}\r\n      <div className=\"task-input\">\r\n        <input\r\n          type=\"text\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n          placeholder=\"Nueva tarea\"\r\n        />\r\n        <button onClick={addTask}>Agregar tarea</button>\r\n      </div>\r\n\r\n      {/* Lista de tareas */}\r\n      <ul className=\"task-list\">\r\n        {tasks.length > 0 ? (\r\n          tasks.map((task) => (\r\n            <li key={task.id} className=\"task-item\">\r\n              <span>{task.task_name}</span>\r\n              <button className=\"delete\" onClick={() => deleteTask(task.id)}>\r\n                Eliminar\r\n              </button>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li className=\"task-item\">No hay tareas disponibles.</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}