{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Documents\\\\PRACTICA\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]); // Almacenar las tareas\n  const [newTask, setNewTask] = useState(''); // Para la tarea nueva\n  const [error, setError] = useState(null); // Para manejar los errores\n\n  // Función para obtener las tareas desde el backend\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch('http://backend:8080/api/tasks');\n        const data = await response.json();\n        setTasks(data.tasks); // Actualiza las tareas en el estado\n      } catch (error) {\n        setError('Error al obtener tareas'); // Establece el mensaje de error\n        console.error('Error al obtener tareas:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n\n  // Función para agregar una nueva tarea\n  const handleAddTask = async e => {\n    e.preventDefault();\n    if (!newTask.trim()) {\n      setError('Por favor ingresa una tarea');\n      return;\n    }\n    try {\n      const response = await fetch('http://backend:8080/api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          task: newTask\n        }) // Enviar la tarea en formato JSON\n      });\n      if (!response.ok) {\n        throw new Error('Error al agregar tarea');\n      }\n      const addedTask = await response.json();\n      setTasks(prevTasks => [...prevTasks, addedTask]); // Agregar la tarea a la lista\n      setNewTask(''); // Resetea el campo de texto\n      setError(null); // Elimina cualquier mensaje de error previo\n    } catch (error) {\n      setError('Error al agregar tarea');\n      console.error('Error al agregar tarea:', error);\n    }\n  };\n\n  // Función para eliminar una tarea\n  const handleDeleteTask = async taskId => {\n    try {\n      const response = await fetch(`http://backend:8080/api/tasks/${taskId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Error al eliminar tarea');\n      }\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId)); // Elimina la tarea del estado\n    } catch (error) {\n      setError('Error al eliminar tarea');\n      console.error('Error al eliminar tarea:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddTask,\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Agregar tarea\",\n        className: \"task-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"task-button\",\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"task-item\",\n        children: [task.task, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          className: \"delete-button\",\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No hay tareas disponibles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NL170mS/DYS77qoKMSPP4GpQQlY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","error","setError","fetchTasks","response","fetch","data","json","console","handleAddTask","e","preventDefault","trim","method","headers","body","JSON","stringify","task","ok","Error","addedTask","prevTasks","handleDeleteTask","taskId","filter","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","length","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Documents/PRACTICA/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]); // Almacenar las tareas\r\n  const [newTask, setNewTask] = useState(''); // Para la tarea nueva\r\n  const [error, setError] = useState(null); // Para manejar los errores\r\n\r\n  // Función para obtener las tareas desde el backend\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await fetch('http://backend:8080/api/tasks');\r\n        const data = await response.json();\r\n        setTasks(data.tasks); // Actualiza las tareas en el estado\r\n      } catch (error) {\r\n        setError('Error al obtener tareas'); // Establece el mensaje de error\r\n        console.error('Error al obtener tareas:', error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  // Función para agregar una nueva tarea\r\n  const handleAddTask = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!newTask.trim()) {\r\n      setError('Por favor ingresa una tarea');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://backend:8080/api/tasks', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ task: newTask }), // Enviar la tarea en formato JSON\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al agregar tarea');\r\n      }\r\n\r\n      const addedTask = await response.json();\r\n      setTasks((prevTasks) => [...prevTasks, addedTask]); // Agregar la tarea a la lista\r\n      setNewTask(''); // Resetea el campo de texto\r\n      setError(null); // Elimina cualquier mensaje de error previo\r\n    } catch (error) {\r\n      setError('Error al agregar tarea');\r\n      console.error('Error al agregar tarea:', error);\r\n    }\r\n  };\r\n\r\n  // Función para eliminar una tarea\r\n  const handleDeleteTask = async (taskId) => {\r\n    try {\r\n      const response = await fetch(`http://backend:8080/api/tasks/${taskId}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Error al eliminar tarea');\r\n      }\r\n\r\n      setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId)); // Elimina la tarea del estado\r\n    } catch (error) {\r\n      setError('Error al eliminar tarea');\r\n      console.error('Error al eliminar tarea:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1>Tareas</h1>\r\n\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n\r\n      <form onSubmit={handleAddTask} className=\"task-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n          placeholder=\"Agregar tarea\"\r\n          className=\"task-input\"\r\n        />\r\n        <button type=\"submit\" className=\"task-button\">\r\n          Agregar\r\n        </button>\r\n      </form>\r\n\r\n      <ul className=\"task-list\">\r\n        {tasks.length > 0 ? (\r\n          tasks.map((task) => (\r\n            <li key={task.id} className=\"task-item\">\r\n              {task.task}\r\n              <button\r\n                onClick={() => handleDeleteTask(task.id)}\r\n                className=\"delete-button\"\r\n              >\r\n                Eliminar\r\n              </button>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li>No hay tareas disponibles</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}